CREATE TABLE "LECTURE" (
	"L_NUM"	NUMBER		NOT NULL,
	"ID"	VARCHAR2(200)		NOT NULL,
	"C_NUM"	NUMBER		NOT NULL,
	"LEVEL_NUM"	NUMBER		NOT NULL,
	"L_NAME"	VARCHAR2(200)		NULL,
	"L_CONTENTS"	CLOB		NULL,
	"L_PRICE"	NUMBER		NULL,
	"L_COUNT"	NUMBER		NULL,
	"L_DATE"	NUMBER		NULL
);

CREATE TABLE "ROLE" (
	"ROLENUM"	NUMBER		NOT NULL,
	"ROLENAME"	VARCHAR2(200)		NULL
);

CREATE TABLE "MEMBER_ROLE" (
	"R_NUM"	NUMBER		NOT NULL,
	"ROLENUM"	NUMBER		NOT NULL,
	"ID"	VARCHAR2(200)		NOT NULL
);

CREATE TABLE "CATEGORY" (
	"C_NUM"	NUMBER		NOT NULL,
	"C_NAME"	VARCHAR2(200)		NULL
);

CREATE TABLE "MEMBER" (
	"ID"	VARCHAR2(200)		NOT NULL,
	"PW"	VARCHAR2(200)		NULL,
	"NAME"	VARCHAR2(200)		NULL,
	"N_NAME"	VARCHAR2(200)		NULL,
	"B_DATE"	NUMBER		NULL,
	"GENDER"	VARCHAR2(200)		NULL,
	"EMAIL"	VARCHAR2(200)		NULL,
	"PHONE"	VARCHAR2(200)		NULL,
	"POINT"	NUMBER		NULL
);

CREATE TABLE "L_FILE" (
	"NUM"	NUMBER		NOT NULL,
	"L_NUM"	NUMBER		NOT NULL,
	"F_NAME"	VARCHAR2(200)		NULL,
	"F_ORINAME"	VARCHAR2(200)		NULL
);

CREATE TABLE "LECTURE_SIGN" (
	"S_NUM"	NUMBER		NOT NULL,
	"L_NUM"	NUMBER		NOT NULL,
	"ID"	VARCHAR2(200)		NOT NULL,
	"S_START"	DATE		NULL,
	"S_END"	DATE		NULL,
	"STATUS"	NUMBER		NULL
);

CREATE TABLE "LEVEL" (
	"LEVEL_NUM"	NUMBER		NOT NULL,
	"LEVEL_NAME"	VARCHAR2(200)		NULL
);

CREATE TABLE "CART" (
	"CART_NUM"	NUMBER		NOT NULL,
	"ID"	VARCHAR2(200)		NOT NULL,
	"L_NUM"	NUMBER		NOT NULL
);

CREATE TABLE "CS_BOARD" (
	"CS_NUM"	NUMBER		NOT NULL,
	"ID"	VARCHAR2(200)		NOT NULL,
	"CS_PHONE"	VARCHAR2(200)		NOT NULL,
	"CS_EMAIL"	VARCHAR2(200)		NULL,
	"CS_TITLE"	VARCHAR2(400)		NULL,
	"CS_CONTENTS"	CLOB		NULL,
	"REGDATE"	DATE		NULL,
	"CS_STATUS"	VARCHAR2(200)		NULL,
	"CS_ANSWER"	CLOB		NULL,
	"CS_ADMIN"	VARCHAR2(200)		NULL,
	"RE_REGDATE"	DATE		NULL
);

CREATE TABLE "ORDERS" (
	"O_NUM"	NUMBER		NOT NULL,
	"L_NUM"	NUMBER		NOT NULL,
	"P_UID"	VARCHAR2(200)		NOT NULL,
	"O_AMOUNT"	NUMBER		NULL
);

CREATE TABLE "LECTURE_BOARD" (
	"NUM"	NUMBER		NOT NULL,
	"L_NUM"	NUMBER		NOT NULL,
	"ID"	VARCHAR2(200)		NOT NULL,
	"SCORE"	NUMBER		NULL,
	"CONTENTS"	VARCHAR2(4000)		NULL,
	"REG_DATE"	DATE		NULL
);

CREATE TABLE "NOTICE" (
	"N_NUM"	NUMBER		NOT NULL,
	"ID"	VARCHAR2(200)		NOT NULL,
	"TITLE"	VARCHAR2(400)		NULL,
	"REG_DATE"	DATE		NULL,
	"CONTENTS"	CLOB		NULL
);

CREATE TABLE "FB_REPLY" (
	"NUM"	NUMBER		NOT NULL,
	"ID"	VARCHAR2(200)		NOT NULL,
	"FB_NUM"	NUMBER		NOT NULL,
	"CONTENTS"	VARCHAR2(4000)		NULL,
	"REG_DATE"	DATE		NULL
);

CREATE TABLE "FB_FILE" (
	"F_NUM"	NUMBER		NOT NULL,
	"FB_NUM"	NUMBER		NOT NULL,
	"F_NAME"	VARCHAR2(400)		NULL,
	"ORINAME"	VARCHAR2(400)		NULL
);

CREATE TABLE "HEART" (
	"LIKE_NUM"	NUMBER		NOT NULL,
	"ID"	VARCHAR2(200)		NOT NULL,
	"FB_NUM"	NUMBER		NOT NULL
);

CREATE TABLE "FREE_BOARD" (
	"FB_NUM"	NUMBER		NOT NULL,
	"ID"	VARCHAR2(200)		NOT NULL,
	"TITLE"	VARCHAR2(400)		NULL,
	"REG_DATE"	DATE		NULL,
	"HIT"	NUMBER		NULL,
	"CONTENTS"	CLOB		NULL,
	"CATEGORY"	VARCHAR2(200)		NULL,
	"LIKE_COUNT"	NUMBER		NULL
);

CREATE TABLE "REFUND" (
	"PR_NUM"	NUMBER		NOT NULL,
	"O_NUM"	NUMBER		NOT NULL,
	"PR_REASON"	VARCHAR2(400)		NULL,
	"PR_AMOUNT"	NUMBER		NULL,
	"PR_POINT"	NUMBER		NULL,
	"PR_REGDATE"	DATE		NULL,
	"P_UID"	VARCHAR2(200)		NOT NULL
);

CREATE TABLE "SB_REPLY" (
	"NUM"	NUMBER		NOT NULL,
	"SB_NUM"	NUMBER		NOT NULL,
	"ID"	VARCHAR2(200)		NOT NULL,
	"CONTENTS"	VARCHAR2(4000)		NULL,
	"REG_DATE"	DATE		NULL,
	"REF"	NUMBER		NULL
);

CREATE TABLE "SB_FILE" (
	"F_NUM"	NUMBER		NOT NULL,
	"SB_NUM"	NUMBER		NOT NULL,
	"F_NAME"	VARCHAR2(400)		NULL,
	"ORINAME"	VARCHAR2(400)		NULL
);

CREATE TABLE "MEMBER_FILE" (
	"NUM"	NUMBER		NOT NULL,
	"ID"	VARCHAR2(200)		NOT NULL,
	"F_NAME"	VARCHAR2(200)		NULL,
	"F_ORINAME"	VARCHAR2(200)		NULL
);

CREATE TABLE "TEACHER" (
	"T_NUM"	NUMBER		NOT NULL,
	"ID"	VARCHAR2(200)		NOT NULL,
	"BANK_NUM"	VARCHAR2(200)		NULL,
	"BANK_NAME"	VARCHAR2(200)		NULL,
	"INTRODUCE"	CLOB		NULL
);

CREATE TABLE "NOTICE_REPLY" (
	"NUM"	NUMBER		NOT NULL,
	"N_NUM"	NUMBER		NOT NULL,
	"ID"	VARCHAR2(200)		NOT NULL,
	"CONTENTS"	VARCHAR2(4000)		NULL,
	"REG_DATE"	DATE		NULL
);

CREATE TABLE "NOTICE_FILE" (
	"F_NUM"	NUMBER		NOT NULL,
	"N_NUM"	NUMBER		NOT NULL,
	"F_NAME"	VARCHAR2(400)		NULL,
	"ORINAME"	VARCHAR2(400)		NULL
);

CREATE TABLE "VIDEO" (
	"V_NUM"	NUMBER		NOT NULL,
	"L_NUM"	NUMBER		NOT NULL,
	"V_URL"	VARCHAR2(300)		NULL,
	"V_CONTEXT"	VARCHAR2(300)		NULL,
	"V_SEQ"	NUMBER		NULL
);

CREATE TABLE "PAYMENTS" (
	"P_UID"	VARCHAR2(200)		NOT NULL,
	"ID"	VARCHAR2(200)		NOT NULL,
	"P_POINT"	NUMBER		NULL,
	"P_AMOUNT"	NUMBER		NULL,
	"P_REALAMOUNT"	NUMBER		NULL,
	"P_REGDATE"	DATE		NULL,
	"P_METHOD"	VARCHAR2(100)		NULL,
	"P_C_NAME"	VARCHAR2(200)		NULL,
	"P_C_NUM"	NUMBER		NULL,
	"P_C_QUOTA"	NUMBER		NULL,
	"P_REMAINS"	NUMBER		NULL,
	"P_AT"	NUMBER		NULL,
	"P_RECEIPT"	VARCHAR2(400)		NULL,
	"P_C_APPLY"	NUMBER		NULL
);

CREATE TABLE "STUDY_BOARD" (
	"SB_NUM"	NUMBER		NOT NULL,
	"L_NUM"	NUMBER		NOT NULL,
	"ID"	VARCHAR2(200)		NOT NULL,
	"TITLE"	VARCHAR2(400)		NULL,
	"REG_DATE"	DATE		NULL,
	"ANSWER"	NUMBER		NULL,
	"HIT"	NUMBER		NULL,
	"CONTENTS"	CLOB		NULL,
	"CATEGORY"	VARCHAR2(200)		NULL
);

CREATE TABLE "STATUS" (
	"NUM"	NUMBER		NOT NULL,
	"V_NUM"	NUMBER		NOT NULL,
	"S_NUM"	NUMBER		NOT NULL,
	"V_STATUS"	NUMBER		NULL
);

CREATE TABLE "L_HEART" (
	"LIKE_NUM"	NUMBER		NOT NULL,
	"ID"	VARCHAR2(200)		NOT NULL,
	"NUM"	NUMBER		NOT NULL
);

ALTER TABLE "LECTURE" ADD CONSTRAINT "PK_LECTURE" PRIMARY KEY (
	"L_NUM"
);

ALTER TABLE "ROLE" ADD CONSTRAINT "PK_ROLE" PRIMARY KEY (
	"ROLENUM"
);

ALTER TABLE "MEMBER_ROLE" ADD CONSTRAINT "PK_MEMBER_ROLE" PRIMARY KEY (
	"R_NUM"
);

ALTER TABLE "CATEGORY" ADD CONSTRAINT "PK_CATEGORY" PRIMARY KEY (
	"C_NUM"
);

ALTER TABLE "MEMBER" ADD CONSTRAINT "PK_MEMBER" PRIMARY KEY (
	"ID"
);

ALTER TABLE "L_FILE" ADD CONSTRAINT "PK_L_FILE" PRIMARY KEY (
	"NUM"
);

ALTER TABLE "LECTURE_SIGN" ADD CONSTRAINT "PK_LECTURE_SIGN" PRIMARY KEY (
	"S_NUM"
);

ALTER TABLE "LEVEL" ADD CONSTRAINT "PK_LEVEL" PRIMARY KEY (
	"LEVEL_NUM"
);

ALTER TABLE "CART" ADD CONSTRAINT "PK_CART" PRIMARY KEY (
	"CART_NUM"
);

ALTER TABLE "CS_BOARD" ADD CONSTRAINT "PK_CS_BOARD" PRIMARY KEY (
	"CS_NUM"
);

ALTER TABLE "ORDERS" ADD CONSTRAINT "PK_ORDERS" PRIMARY KEY (
	"O_NUM"
);

ALTER TABLE "LECTURE_BOARD" ADD CONSTRAINT "PK_LECTURE_BOARD" PRIMARY KEY (
	"NUM"
);

ALTER TABLE "NOTICE" ADD CONSTRAINT "PK_NOTICE" PRIMARY KEY (
	"N_NUM"
);

ALTER TABLE "FB_REPLY" ADD CONSTRAINT "PK_FB_REPLY" PRIMARY KEY (
	"NUM"
);

ALTER TABLE "FB_FILE" ADD CONSTRAINT "PK_FB_FILE" PRIMARY KEY (
	"F_NUM"
);

ALTER TABLE "HEART" ADD CONSTRAINT "PK_HEART" PRIMARY KEY (
	"LIKE_NUM"
);

ALTER TABLE "FREE_BOARD" ADD CONSTRAINT "PK_FREE_BOARD" PRIMARY KEY (
	"FB_NUM"
);

ALTER TABLE "REFUND" ADD CONSTRAINT "PK_REFUND" PRIMARY KEY (
	"PR_NUM"
);

ALTER TABLE "SB_REPLY" ADD CONSTRAINT "PK_SB_REPLY" PRIMARY KEY (
	"NUM"
);

ALTER TABLE "SB_FILE" ADD CONSTRAINT "PK_SB_FILE" PRIMARY KEY (
	"F_NUM"
);

ALTER TABLE "MEMBER_FILE" ADD CONSTRAINT "PK_MEMBER_FILE" PRIMARY KEY (
	"NUM"
);

ALTER TABLE "TEACHER" ADD CONSTRAINT "PK_TEACHER" PRIMARY KEY (
	"T_NUM"
);

ALTER TABLE "NOTICE_REPLY" ADD CONSTRAINT "PK_NOTICE_REPLY" PRIMARY KEY (
	"NUM"
);

ALTER TABLE "NOTICE_FILE" ADD CONSTRAINT "PK_NOTICE_FILE" PRIMARY KEY (
	"F_NUM"
);

ALTER TABLE "VIDEO" ADD CONSTRAINT "PK_VIDEO" PRIMARY KEY (
	"V_NUM"
);

ALTER TABLE "PAYMENTS" ADD CONSTRAINT "PK_PAYMENTS" PRIMARY KEY (
	"P_UID"
);

ALTER TABLE "STUDY_BOARD" ADD CONSTRAINT "PK_STUDY_BOARD" PRIMARY KEY (
	"SB_NUM"
);

ALTER TABLE "STATUS" ADD CONSTRAINT "PK_STATUS" PRIMARY KEY (
	"NUM"
);

ALTER TABLE "L_HEART" ADD CONSTRAINT "PK_L_HEART" PRIMARY KEY (
	"LIKE_NUM"
);

--LECTURE
Insert into C##1S2J.LECTURE (L_NUM,ID,C_NUM,LEVEL_NUM,L_NAME,L_PRICE,L_COUNT,L_DATE) values (11,'sg',4,1,'제대로 파는 HTML & CSS - by 얄코',33000,6,3);
Insert into C##1S2J.LECTURE (L_NUM,ID,C_NUM,LEVEL_NUM,L_NAME,L_PRICE,L_COUNT,L_DATE) values (15,'sg',8,2,'데이터 분석 SQL Fundamentals',55000,5,4);
Insert into C##1S2J.LECTURE (L_NUM,ID,C_NUM,LEVEL_NUM,L_NAME,L_PRICE,L_COUNT,L_DATE) values (16,'sg',2,1,'남박사의 파이썬 기초부터 실전 100% 활용',66000,6,5);

--L_FILE
Insert into C##1S2J.L_FILE (NUM,L_NUM,F_NAME,F_ORINAME) values (265,11,'04bbb2c5-8cc4-4790-b5c4-fd1928e60171-test5.png','test5.png');
Insert into C##1S2J.L_FILE (NUM,L_NUM,F_NAME,F_ORINAME) values (269,15,'d2c589e8-7456-4fbc-8102-697b5f875d18-test9.png','test9.png');
Insert into C##1S2J.L_FILE (NUM,L_NUM,F_NAME,F_ORINAME) values (270,16,'dd5191f7-b8a5-4cc3-b798-b04839582c8c-test10.png','test10.png');


--CATEGORY
Insert into C##1S2J.CATEGORY (C_NUM,C_NAME) values (1,'Java');
Insert into C##1S2J.CATEGORY (C_NUM,C_NAME) values (2,'Python');
Insert into C##1S2J.CATEGORY (C_NUM,C_NAME) values (3,'JavaScript');
Insert into C##1S2J.CATEGORY (C_NUM,C_NAME) values (4,'HTML/CSS');
Insert into C##1S2J.CATEGORY (C_NUM,C_NAME) values (5,'React');
Insert into C##1S2J.CATEGORY (C_NUM,C_NAME) values (6,'Node.js');
Insert into C##1S2J.CATEGORY (C_NUM,C_NAME) values (7,'Spring');
Insert into C##1S2J.CATEGORY (C_NUM,C_NAME) values (8,'SQL');

--LEVEL
Insert into C##GANG."LEVEL" (LEVEL_NUM,LEVEL_NAME) values (1,'하');
Insert into C##GANG."LEVEL" (LEVEL_NUM,LEVEL_NAME) values (2,'중');
Insert into C##GANG."LEVEL" (LEVEL_NUM,LEVEL_NAME) values (3,'상');

--VIDEO

--CART

--LECTURE_SIGN

--STATUS

--게시판 DATABASE
--게시판테이블
CREATE TABLE STUDY_BOARD (
	SB_NUM NUMBER CONSTRAINT S_BOARD_NUM_PK PRIMARY KEY,
	L_NUM NUMBER CONSTRAINT S_BOARD_LNUM_NN NOT NULL,
	ID VARCHAR2(200) CONSTRAINT S_BOARD_ID_NN NOT NULL,
	TITLE VARCHAR2(400) CONSTRAINT S_BOARD_TITLE_NN NOT NULL,
	REG_DATE DATE CONSTRAINT S_BOARD_DATE_NN NOT NULL,
	ANSWER NUMBER CONSTRAINT S_BOARD_NUMBER_NN NOT NULL,
	HIT NUMBER CONSTRAINT S_BOARD_HIT_NN NOT NULL,
	CONTENTS CLOB CONSTRAINT S_BOARD_CONTENTS_NN NOT NULL,
	CATEGORY VARCHAR2(200) CONSTRAINT S_BOARD_CATEGORY_NN NOT NULL,
    
    CONSTRAINT S_BOARD_LNUM_FK FOREIGN KEY (L_NUM) REFERENCES LECTURE (L_NUM) ON DELETE CASCADE,
    CONSTRAINT S_BOARD_ID_FK FOREIGN KEY (ID) REFERENCES MEMBER (ID) ON DELETE CASCADE
);


--게시판 시퀀스
CREATE SEQUENCE BOARD_SEQ;

--답글 테이블 만들기--
CREATE TABLE SB_REPLY(
  NUM NUMBER CONSTRAINT S_REPLY_NUM_PK PRIMARY KEY,
  SB_NUM NUMBER CONSTRAINT S_REPLY_SB_NUM_NN NOT NULL,
  ID VARCHAR2(200) CONSTRAINT S_REPLY_ID_NN NOT NULL,
  CONTENTS CLOB CONSTRAINT S_REPLY_CONTENTS_NN NOT NULL,
  REG_DATE DATE CONSTRAINT S_REPLY_DATE_NN NOT NULL,
  REF NUMBER CONSTRAINT S_REPLY_REF_NN NOT NULL,
  
  CONSTRAINT REPLY_SB_NUM_U UNIQUE (SB_NUM),
  CONSTRAINT REPLY_SB_NUM_FK FOREIGN KEY(SB_NUM) REFERENCES STUDY_BOARD (SB_NUM)ON DELETE CASCADE,
  CONSTRAINT REPLY_ID_FK FOREIGN KEY(ID) REFERENCES MEMBER(ID) ON DELETE CASCADE
);

--답글 시퀀스
CREATE SEQUENCE BOARD_SEQ;

--댓글 테이블
CREATE TABLE SB_COMMENT(
  NUM NUMBER CONSTRAINT S_COMMENT_NUM_PK PRIMARY KEY,
  SB_NUM NUMBER CONSTRAINT S_COMMENT_SB_NUM_NN NOT NULL,
  ID VARCHAR2(200) CONSTRAINT S_COMMENT_ID_NN NOT NULL,
  CONTENTS CLOB CONSTRAINT S_COMMENT_CONTENTS_NN NOT NULL,
  REG_DATE DATE CONSTRAINT S_COMMENT_DATE_NN NOT NULL,
  REF NUMBER CONSTRAINT S_COMMENT_REF_NN NOT NULL,

  CONSTRAINT COMMENT_SB_NUM_FK FOREIGN KEY(SB_NUM) REFERENCES STUDY_BOARD (SB_NUM)ON DELETE CASCADE
);
--댓글 시퀀스
CREATE SEQUENCE BOARD_SEQ;

--게시판 파일테이블
CREATE TABLE BOARDFILE (
  NUM NUMBER CONSTRAINT BOARDFILE_F_NUM_PK PRIMARY KEY,
  SB_NUM NUMBER CONSTRAINT BOARDFILE_SB_NUM_NN NOT NULL,
  F_NAME VARCHAR2(400),
  F_ORINAME VARCHAR2(400),
  
  CONSTRAINT BOARDFILE_SB_NUM_FK FOREIGN KEY(SB_NUM) REFERENCES STUDY_BOARD (SB_NUM) ON DELETE CASCADE
);
--파일 시퀀스
CREATE SEQUENCE FILE_SEQ;

--수강평 테이블
CREATE TABLE LECTURE_BOARD(
  NUM NUMBER CONSTRAINT L_BOARD_NUM_FK PRIMARY KEY,
  L_NUM NUMBER CONSTRAINT L_BOARD_NUM_NN NOT NULL,
  ID VARCHAR2(200) CONSTRAINT L_BOARD_NN NOT NULL,
  SCORE NUMBER CONSTRAINT L_BOARD_SCORE_NN NOT NULL,
  CONTENTS VARCHAR2(4000),
  REG_DATE DATE,
  
  CONSTRAINT L_BOARD_L_NUM_FK FOREIGN KEY(L_NUM) REFERENCES LECTURE(L_NUM) ON DELETE CASCADE,
  CONSTRAINT L_BOARD_ID_FK FOREIGN KEY(ID) REFERENCES MEMBER(ID) ON DELETE CASCADE
);


--수강평 시퀀스
CREATE SEQUENCE BOARD_SEQ;

--수강평 추천 테이블
CREATE TABLE L_HEART(
    LIKE_NUM NUMBER CONSTRAINT L_HEART_NUM_PK PRIMARY KEY,
    ID VARCHAR2(200) CONSTRAINT L_HEART_ID_NN NOT NULL,
    NUM NUMBER CONSTRAINT L_HEART_NUM_NN NOT NULL,
    
    CONSTRAINT L_HEART_NUM_FK FOREIGN KEY(num) REFERENCES LECTURE_BOARD (num) ON DELETE CASCADE,
    CONSTRAINT L_HEART_ID_FK FOREIGN KEY(id) REFERENCES MEMBER (id) ON DELETE CASCADE
);

--수강평추천 시퀀스
CREATE SEQUENCE LIKE_SEQ;

COMMIT;

--자유게시판 테이블 생성
CREATE TABLE FREE_BOARD (
    FB_NUM NUMBER CONSTRAINT FREE_BOARD_NUM_PK PRIMARY KEY,
	ID VARCHAR2(200) CONSTRAINT FREE_BOARD_ID_NN NOT NULL,
	TITLE VARCHAR2(400),
	REG_DATE DATE,
	HIT NUMBER,
	CONTENTS CLOB,
	CATEGORY VARCHAR2(200),
	LIKE_COUNT NUMBER,
    
    CONSTRAINT FREE_BOARD_ID_FK FOREIGN KEY(ID) REFERENCES MEMBER (ID) ON DELETE CASCADE
);


--자유게시판 댓글 테이블
CREATE TABLE FB_REPLY(
  NUM NUMBER CONSTRAINT FB_REPLY_NUM_PK PRIMARY KEY,
  FB_NUM NUMBER CONSTRAINT FB_REPLY_FB_NUM_NN NOT NULL,
  ID VARCHAR2(200) CONSTRAINT FB_REPLY_ID_NN NOT NULL,
  CONTENTS VARCHAR2(4000) CONSTRAINT FB_REPLY_CONTENTS_NN NOT NULL,
  REG_DATE DATE CONSTRAINT FB_REPLY_DATE_NN NOT NULL,

  CONSTRAINT FB_REPLY_FB_NUM_FK FOREIGN KEY(FB_NUM) REFERENCES FREE_BOARD (FB_NUM)ON DELETE CASCADE,
  CONSTRAINT FB_REPLY_ID_FK FOREIGN KEY(ID) REFERENCES MEMBER (ID) ON DELETE CASCADE
);


--자유게시판 추천 테이블
CREATE TABLE FB_HEART(
    LIKE_NUM NUMBER CONSTRAINT FB_HEART_NUM_PK PRIMARY KEY,
    ID VARCHAR2(200) CONSTRAINT FB_HEART_ID_NN NOT NULL,
    FB_NUM NUMBER CONSTRAINT FB_HEART_NUM_NN NOT NULL,
    
    CONSTRAINT FB_HEART_NUM_FK FOREIGN KEY(fb_num) REFERENCES FREE_BOARD (fb_num) ON DELETE CASCADE,
    CONSTRAINT FB_HEART_ID_FK FOREIGN KEY(id) REFERENCES MEMBER (id) ON DELETE CASCADE
);
SELECT * FROM FB_HEART;

--자유게시판 추천 시퀀스
CREATE SEQUENCE LIKE_SEQ;


--공지사항
CREATE TABLE NOTICE(
    N_NUM NUMBER CONSTRAINT NOTICE_NUM_PK PRIMARY KEY,
    ID VARCHAR2(200) CONSTRAINT NOTICE_ID_NN NOT NULL,
    TITLE VARCHAR2(400) CONSTRAINT NOTICE_TITLE_NN NOT NULL,
    REG_DATE DATE CONSTRAINT NOTICE_DATE_NN NOT NULL,
    CONTENTS CLOB CONSTRAINT NOTICE_CONTENTS_NN NOT NULL,
    
    CONSTRAINT NOTICE_ID_FK FOREIGN KEY(ID) REFERENCES MEMBER (ID)ON DELETE CASCADE
);

--공지사항 댓글 테이블
CREATE TABLE NOTICE_REPLY(
  NUM NUMBER CONSTRAINT NOTICE_REPLY_NUM_PK PRIMARY KEY,
  N_NUM NUMBER CONSTRAINT NOTICE_REPLY_N_NUM_NN NOT NULL,
  ID VARCHAR2(200) CONSTRAINT NOTICE_REPLY_ID_NN NOT NULL,
  CONTENTS CLOB CONSTRAINT NOTICE_REPLY_CONTENTS_NN NOT NULL,
  REG_DATE DATE CONSTRAINT NOTICE_REPLY_DATE_NN NOT NULL,

  CONSTRAINT NOTICE_REPLY_N_NUM_FK FOREIGN KEY(N_NUM) REFERENCES NOTICE (N_NUM)ON DELETE CASCADE,
  CONSTRAINT NOTICE_REPLY_ID_FK FOREIGN KEY(ID) REFERENCES MEMBER (ID)ON DELETE CASCADE
);


--게시판테이블
Insert into STUDY_BOARD (SB_NUM,L_NUM,ID,TITLE,REG_DATE,ANSWER,HIT,CATEGORY) values (873,12,'개발조아','빌드시 경로가 재대로 인식이 안되는거 같습니다.',to_date('22/10/13','RR/MM/DD'),0,8,'SPRING');
Insert into STUDY_BOARD (SB_NUM,L_NUM,ID,TITLE,REG_DATE,ANSWER,HIT,CATEGORY) values (877,12,'졸라맨','강의 별개의 질문이 있습니다.',to_date('22/10/13','RR/MM/DD'),0,8,'SPRING');

--답글 테이블 만들기--
Insert into SB_REPLY (NUM,SB_NUM,ID,REG_DATE,REF) values (861,857,'sg',to_date('22/10/13','RR/MM/DD'),0);
Insert into SB_REPLY (NUM,SB_NUM,ID,REG_DATE,REF) values (866,864,'sg',to_date('22/10/13','RR/MM/DD'),0);

--댓글 테이블
Insert into SB_COMMENT (NUM,SB_NUM,ID, CONTENTS,REG_DATE,REF) values (1001,982,'tjfl','ㅎㅎ',to_date('22/10/17','RR/MM/DD'),1);
Insert into SB_COMMENT (NUM,SB_NUM,ID, CONTENTS,REG_DATE,REF) values (1001,982,'tjfl','ㅜㅜ',to_date('22/10/17','RR/MM/DD'),1);

--수강평 테이블
Insert into LECTURE_BOARD (NUM,L_NUM,ID,SCORE,CONTENTS,REG_DATE) values (902,46,'송내역',5,'핵심개념들을 정말 와닿게 잘 설명해주십니다. 정말 훌륭한 강의 입니다',to_date('22/10/13','RR/MM/DD'));
Insert into LECTURE_BOARD (NUM,L_NUM,ID,SCORE,CONTENTS,REG_DATE) values (905,10,'김용용',5,'객체지향에 대한 개념부터 설명해주셔서 초보자인 저에게 매우 유익했던거 같습니다. 좋은 강의 만들어주셔서 감사하고 앞으로 있을 강의도 기대하겠습니다.',to_date('22/10/13','RR/MM/DD'));

--수강평 추천 테이블
Insert into L_HEART (LIKE_NUM,ID,NUM) values (465,'김용용',905);
Insert into L_HEART (LIKE_NUM,ID,NUM) values (402,'코딩왕',790);

--자유게시판
Insert into FREE_BOARD (FB_NUM,ID,TITLE,REG_DATE,HIT,CATEGORY,LIKE_COUNT) values (943,'agggro','이 사이트 결제하면',to_date('22/10/13','RR/MM/DD'),1,'자료실',0);
Insert into FREE_BOARD (FB_NUM,ID,TITLE,REG_DATE,HIT,CATEGORY,LIKE_COUNT) values (752,'david','IT 직군 포트폴리오와 블로그 플랫폼 개발 및 배포, 운영까지 현업과 비슷한 환경을 같이 경험하실 분을 찾습니다!',to_date('22/10/12','RR/MM/DD'),11,'스터디모집',0);

--자유게시판 댓글 테이블
Insert into FB_REPLY (NUM,FB_NUM,ID,CONTENTS,REG_DATE) values (761,753,'치킨먹자','하 저도 낄수있나요?',to_date('22/10/12','RR/MM/DD'));
Insert into FB_REPLY (NUM,FB_NUM,ID,CONTENTS,REG_DATE) values (783,769,'david','스터디 내용이 좋네요 ㅎㅎ',to_date('22/10/12','RR/MM/DD'));

--자유게시판 추천 테이블
Insert into FB_HEART (LIKE_NUM,ID,FB_NUM) values (379,'tjfl',753);
Insert into FB_HEART (LIKE_NUM,ID,FB_NUM) values (399,'json',769);

--공지사항
Insert into NOTICE (N_NUM,ID,TITLE,REG_DATE) values (715,'tjfl','6월 1주차 - 인프런 앱 출시 ?',to_date('22/10/12','RR/MM/DD'));
Insert into NOTICE (N_NUM,ID,TITLE,REG_DATE) values (716,'tjfl','6월 3주차 - 스터디 ??',to_date('22/10/12','RR/MM/DD'));

--공지사항 댓글 테이블
Insert into NOTICE_REPLY (NUM,N_NUM,ID,REG_DATE) values (725,716,'코딩왕',to_date('22/10/12','RR/MM/DD'));
Insert into NOTICE_REPLY (NUM,N_NUM,ID,REG_DATE) values (726,715,'코딩왕',to_date('22/10/12','RR/MM/DD'));